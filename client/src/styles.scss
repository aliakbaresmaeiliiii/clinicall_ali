@use '../src/app/core/layouts/layout-component.theme';
@use './app/test-component.theme';
@use 'swiper/swiper-bundle.min.css';
@use 'ngx-toastr/toastr';


@use 'sass:map';
// @use '@angular/material-experimental' as matx;

@use '@angular/material' as mat;

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  @include mat.dialog-overrides((
    container-max-width:70rem
  ));
}



@font-face {
  font-family: 'CustomFont';
  src: url('./assets/fonts/roboto/Roboto-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'CustomFont';
  src: url('./assets/fonts/roboto/Roboto-Bold.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}
body {
  font-family: 'CustomFont', sans-serif;
}
$palettes: (
  "red": mat.$red-palette,
  "green": mat.$green-palette,
  "blue": mat.$blue-palette,
  "yellow": mat.$yellow-palette,
  "cyan": mat.$cyan-palette,
  "magenta": mat.$magenta-palette,
  "orange": mat.$orange-palette,
  "chartreuse": mat.$chartreuse-palette,
  "azure": mat.$azure-palette,
  "rose": mat.$rose-palette,
);

$theme-map: ();
@each $theme in ("dark", "light") {
  @each $color, $palette in $palettes {
    $theme-name: "#{$color}-#{$theme}-theme";
    $theme-map: map.merge(
      $theme-map,
      (
        $theme-name:
          mat.define-theme(
            (
              color: (
                theme-type: $theme,
                primary: $palette,
              ),
            )
          ),
      )
    );
  }
}

$violet-dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$violet-palette,
    ),
    // add density only for default theme config to avoid duplicated theming styles
    density:
      (
        scale: 0,
      ),
  )
);

// default light theme
$violet-light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$violet-palette,
    ),
  )
);

@mixin themable-styles($theme) {
  .tonal {
    background-color: mat.get-theme-color($theme, secondary-container);
    color: mat.get-theme-color($theme, on-secondary-container);
  }

  .filled-table {
    --mat-table-row-item-outline-color: mat.get-theme-color($theme, on-secondary-container);
    background-color: mat.get-theme-color($theme, secondary-container);
    color: mat.get-theme-color($theme, on-secondary-container);
    border-radius: 12px;
    overflow: hidden;
  }

  * {
    scrollbar-width: thin;
    scrollbar-color: mat.get-theme-color($theme, secondary-container) transparent;
  }

  // Button color variants
  .secondary-button {
    @include mat.button-color($theme, $color-variant: secondary);
  }

  .tertiary-button {
    @include mat.button-color($theme, $color-variant: tertiary);
  }

  .warn-button {
    @include mat.button-color($theme, $color-variant: error);
  }

  // Icon color variants
  .primary-icon {
    @include mat.icon-color($theme, $color-variant: primary);
  }

  .secondary-icon {
    @include mat.icon-color($theme, $color-variant: secondary);
  }

  .tertiary-icon {
    @include mat.icon-color($theme, $color-variant: tertiary);
  }

  .warn-icon {
    @include mat.icon-color($theme, $color-variant: error);
  }
}

html {
  @include mat.all-component-themes($violet-dark-theme);

  &.violet-dark {
    @include themable-styles($violet-dark-theme);
  }

  &.violet-light {
    @include mat.all-component-colors($violet-light-theme);
    @include themable-styles($violet-light-theme);
  }

}

.example-bright-container {
  @include mat.theme((
    color: mat.$cyan-palette,
  ));
}
body {
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
}

:host {
  background: var(--mat-sys-primary-container);
  color: var(--mat-sys-on-primary-container);
  border: 1px solid var(--mat-sys-outline-variant);
  font: var(--mat-sys-body-large);
}


@layer base {
  h1 {
    font-size: inherit;
    font-weight: inherit;
  }
}


.mdc-notched-outline__notch {
  border-right: none !important;
  border-left: none !important;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}


// ScrollBar
*::-webkit-scrollbar {
  width: 10px;
}

*::-webkit-scrollbar-track {
  border-radius: 8px;
  background-color: #e7e7e7;
  border: 1px solid #cacaca;
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
}

*::-webkit-scrollbar-thumb {
  border-radius: 8px;
  background-color: #363636;
}

.mdc-text-field--outlined {
  --mdc-outlined-text-field-container-shape: 28px !important;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}

h2,
.mat-header-row {
  color: #5b626b;
  font-size: 17px !important;
  font-weight: 500px;
}